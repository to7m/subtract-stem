#!.venv_for_python3.12.7/bin/python


import sys
import soundfile

import subtract_stem_lib as lib


def subtract_stem(
    stem_path, mix_path, out_path, *,
    delay_stem=None,
    profile_start=None, profile_stop=None,
    out_start=None, out_stop=None,
    transform_len=lib.DEFAULT_TRANSFORM_LEN,
    weighting_exponent=lib.DEFAULT_WEIGHTING_EXPONENT,
    max_amplification=lib.DEFAULT_MAX_AMPLIFICATION,
    smoothing_len=lib.DEFAULT_SMOOTHING_LEN
):
    print("handling pre-audio arguments")
    pre_audio_data = lib.PreAudioData(
        transform_len=transform_len,
        weighting_exponent=weighting_exponent,
        max_amplification=max_amplification,
        smoothing_len=smoothing_len
    )

    print("loading audio files")
    audio_data = lib.AudioData(
        stem_path, mix_path,
        delay_stem=delay_stem,
        profile_start=profile_start, profile_stop=profile_stop,
        out_start=out_start, out_stop=out_stop
    )

    print("making Hann windows")
    stem_window = lib.make_hann_window(
        pre_audio_data.transform_len,
        samples_early=audio_data.delay_stem_samples_remainder
    )
    mix_window = lib.make_hann_window(pre_audio_data.transform_len)

    print("calculating EQ profile")
    eq_profile_calculator = lib.EqProfileCalculator(
        pre_audio_data=pre_audio_data, audio_data=audio_data,
        stem_window=stem_window, mix_window=mix_window
    )
    for i, total in eq_profile_calculator.run_gen():
        print(
            f"\033[A\rcalculating EQ profile: transform pair {i+1} of "
            f"{total}"
        )

    print("making stem-in-mix audio")
    stem_in_mix_calculator = lib.StemInMixCalculator(
        interval=pre_audio_data.interval,
        fade_in_curve=pre_audio_data.fade_in_curve,
        audio_data=audio_data,
        stem_window=stem_window,
        eq_profile=eq_profile_calculator.eq_profile
    )
    for i, total in stem_in_mix_calculator.run_gen():
        print(f"\033[A\rmaking stem-in-mix audio: transform {i} of {total}")

    print("subtracting stem-in-mix audio from mix audio")
    mix_minus_stem_audio = lib.get_mix_minus_stem(
        audio_data.mix_audio, stem_in_mix_calculator.stem_in_mix_audio,
        out_start_sample=audio_data.out_start_sample
    )

    print("writing mix-minus-stem audio to file")
    soundfile.write(
        out_path, mix_minus_stem_audio, audio_data.sample_rate
    )


if __name__ == "__main__":
    kwargs = {}
    for flag, arg in zip(sys.argv[4::2], sys.argv[5::2]):
        if not flag.startswith("--"):
            raise Exception("invalid flag")

        key = flag[2:].replace('-', '_')
        kwargs[key] = arg

    subtract_stem(
        stem_path=sys.argv[1], mix_path=sys.argv[2], out_path=sys.argv[3],
        **kwargs
    )
